version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taskflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: taskflow_db
      POSTGRES_USER: taskflow_user
      POSTGRES_PASSWORD: taskflow_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow_user -d taskflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Task Management Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskflow-app
    restart: unless-stopped
    ports:
      - "3000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://taskflow_user:taskflow_password@postgres:5432/taskflow_db
      JWT_SECRET: taskflow-production-jwt-secret-change-this-in-production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node dist/server/index.js
      "

  # Development services (optional)
  app-dev:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: taskflow-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "5000:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://taskflow_user:taskflow_password@postgres:5432/taskflow_db
      JWT_SECRET: taskflow-development-jwt-secret
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: taskflow-network